const scripts=["const nodes=[{id:"start0",txt:"&#128075;Hello and welcome! 😊<br/><br/> I'm your friendly AI-ChatBot here to assist you in learning more about the incredible work and impact achieved by Piramal Foundation. Our foundation is dedicated to solving India's most intractable problems through Innovation, Collaboration and Sewa Bhaav. Aligned to the Sustainable Development Goals, Piramal Foundation is committed to improving the lives of marginalized communities, by leveraging the power of youth and strengthening Government systems. We work in collaboration with the Central Government and State Government, international and national organizations and academia to accelerate change in India.",typ:1},{id:"start1",txt:"Whether you're interested in understanding various initiatives under our Big Bets, the accomplishments, or the overall impact we've made, I'm here to provide you with the information you need. Just let me know which specific area of our work you'd like to explore, and I'll do my best to share the relevant information with you and gladly provide you with insights on the remarkable work carried out by Piramal Foundation.",typ:1},{id:"start",txt:"How can I assist you today?",typ:1},{id:"bb_options",txt:"Kindly choose a Piramal Foundation entity from the list of options. Your selection will direct you to the relevant entity of interest.",typ:1},{id:"dbc_options",txt:"Explore the DBC Big Bet and delve into our work through these options. Please select your choice.",typ:1},{id:"dbc_1",txt:"Type your query and ask to learn more about the DBC Big Bet.",typ:2,dky:"8fed8dba-7205-11ee-ada1-89085e4df2a5"},{id:"dbc_2",txt:"<a href=https://www.piramalfoundation.org/digital-bharat-collaborative target=blank>Click here to visit PF DBC Website</a><br/><br/>Learn more about our work -",typ:1},{id:"abc_options",txt:"Explore the ABC Big Bet and delve into our work through these options. Please select your choice.",typ:1},{id:"abc_1",txt:"Type your query and ask to learn more about the ABC Big Bet.",typ:2,dky:"f1989180-76bb-11ee-b88c-42004e494300"},{id:"abc_2",txt:"<a href=https://www.piramalfoundation.org/aspirational-bharat-collaborative    target=blank>Click here to visit ABC Website</a><br/><br/>Learn more about our work -",typ:1},{id:"psl_options",txt:"Explore the PSL Big Bet and delve into our work through these options. Please select your choice.",typ:1},{id:"psl_1",txt:"Type your query and ask to learn more about the PSL Big Bet.",typ:2,dky:"535cb25c-76bc-11ee-b88c-42004e494300"},{id:"psl_2",txt:"<a href=https://www.piramalfoundation.org/piramal-school-of-leadership    target=blank>Click here to visit PSL Website</a><br/><br/>Learn more about our work -",typ:1},{id:"mgr_options",txt:"Explore latest indicator & updates from operational projects and programs run under PF umbrella. ",typ:1},{id:"mgr_n1",txt:"Bihar Beneficiary Count Analysis",typ:3,ep:"./mgmt_jsons/BH_beneficiary_analysis_count.json"},{id:"mgr_n2",txt:"Bihar Disease Count Analysis",typ:3,ep:"./mgmt_jsons/BH_disease_analysis_count.json"},{id:"mgr_n3",txt:"Bihar Gender Count Summary",typ:3,ep:"./mgmt_jsons/BH_gender_summary_count.json"},{id:"mgr_n4",txt:"Bihar Marital  Status Count Analysis",typ:3,ep:"./mgmt_jsons/BH_marital_status_analysis_count.json"},{id:"all6bb_ai",txt:"Type your quieries and explore all PF entities and Big Bets using AI driven chat.",typ:2,dky:"5570b808-770d-11ee-b88c-42004e494300"},{id:"thc_options",txt:"Explore the THC Big Bet and delve into our work through these options. Please select your choice.",typ:1},{id:"thc_1",txt:"Type your query and ask to learn more about the THC Big Bet.",typ:2,dky:"7ee5033e-76bc-11ee-b88c-42004e494300"},{id:"thc_2",txt:"<a href=https://www.piramalfoundation.org/anamaya target=blank>Click here to visit PF THC Website</a><br/><br/>Learn more about our work -",typ:1},{id:"psl_options",txt:"Explore the PSL Big Bet and delve into our work through these options. Please select your choice.",typ:1},{id:"psl_1",txt:"Type your query and ask to learn more about the PSL Big Bet.",typ:2,dky:"535cb25c-76bc-11ee-b88c-42004e494300"},{id:"psl_2",txt:"<a href=https://www.piramalfoundation.org/piramal-school-of-leadership  target=blank>Click here to visit PF PSL Website</a><br/><br/>Learn more about our work -",typ:1},{id:"pas_options",txt:"Explore the PAS Big Bet and delve into our work through these options. Please select your choice.",typ:1},{id:"pas_1",txt:"Type your query and ask to learn more about the PAS Big Bet.",typ:2,dky:"1ed0398c-76bc-11ee-b88c-42004e494300"},{id:"pas_2",txt:"<a href=https://www.piramalfoundation.org/piramal-academy-of-sewa   target=blank>Click here to visit PF PAS Website</a><br/><br/>Learn more about our work -",typ:1}],edges=[{n1:"start",n2:"bb_options",txt:"Learn about Piramal Foundation"},{n1:"start",n2:"mgr_options",txt:"Get Project Indicators"},{n1:"bb_options",n2:"all6bb_ai",txt:"Engage in AI-Driven Chat and Explore All the Big Bets"},{n1:"bb_options",n2:"dbc_options",txt:"Digital Bharat Collaborative (DBC)"},{n1:"dbc_options",n2:"dbc_1",txt:"Engage in AI-Driven Conversation"},{n1:"dbc_options",n2:"dbc_2",txt:"Visit the DBC website"},{n1:"dbc_2",n2:"dbc_1",txt:"Engage in AI-driven conversation and learn more about DBC Big Bet"},{n1:"dbc_2",n2:"bb_options",txt:"Keep exploring the work of other Big Bets "},{n1:"bb_options",n2:"abc_options",txt:"Aspirational Bharat Collaborative (ABC)"},{n1:"abc_options",n2:"abc_1",txt:"Engage in AI-Driven Conversation"},{n1:"abc_options",n2:"abc_2",txt:"Visit the ABC website"},{n1:"abc_2",n2:"abc_1",txt:"Engage in AI-driven conversation and learn more about ABC Big Bet"},{n1:"abc_2",n2:"bb_options",txt:"Keep exploring other Big Bets & Foundation Entities"},{n1:"mgr_options",n2:"mgr_n1",txt:"Bihar Beneficiary Count Analysis"},{n1:"mgr_options",n2:"mgr_n2",txt:"Bihar Disease Count Analysis"},{n1:"mgr_options",n2:"mgr_n3",txt:"Bihar Gender Count Summary"},{n1:"mgr_options",n2:"mgr_n4",txt:"Bihar Marital  Status Count Analysis"},{n1:"bb_options",n2:"thc_options",txt:"ANAMAYA – Tribal Health Collaborative (THC)"},{n1:"thc_options",n2:"thc_1",txt:"Engage in AI-Driven Conversation"},{n1:"thc_options",n2:"thc_2",txt:"Visit the THC website"},{n1:"thc_2",n2:"thc_1",txt:"Engage in AI-driven conversation and learn more about THC Big Bet"},{n1:"thc_2",n2:"bb_options",txt:"Keep exploring other Big Bets & Foundation Entities"},{n1:"bb_options",n2:"psl_options",txt:"Piramal School of Leadership (PSL)"},{n1:"psl_options",n2:"psl_2",txt:"Visit the PSL website"},{n1:"psl_options",n2:"psl_1",txt:"Engage in AI-driven conversation and learn more about PSL Big Bet"},{n1:"psl_2",n2:"bb_options",txt:"Keep exploring other Big Bets & Foundation Entities"},{n1:"bb_options",n2:"pas_options",txt:"Piramal Academy of Sewa (PAS)"},{n1:"pas_options",n2:"pas_2",txt:"Visit the PAS website"},{n1:"pas_options",n2:"pas_1",txt:"Engage in AI-driven conversation and learn more about PAS Big Bet"},{n1:"pas_2",n2:"bb_options",txt:"Keep exploring other Big Bets & Foundation Entities"}];","var ChatLog="",MsgCount=0,CurrentNode="start",PreviousNodes=[];const GCcolorShades=["#243646","#2D4652","#35475F","#3D486B","#454977","#4D4A84","#554B90","#5D4C9C","#654DA8","#6D4EB4","#754FC0","#7D50CC","#8551D8","#8D52E4","#9553F0","#9D54FC","#A556FF","#AC61FF","#B36BFF","#BA76FF","#C281FF","#C98BFF","#D096FF","#D7A1FF","#DEABFF","#E5B6FF","#ECC1FF","#F3CCFF","#FAD6FF","#FFE1FF"];function LoadNextNode(){showMessageOnButton("main_button","&#8987;<b>Working..<b>");getNodeType(CurrentNode);var e,t,n,o,r=getSelectedRadioOption();r&&(appendUserMessage(r),MsgCount++,log_msg("usr",r),(r=getEdgeTargetNode(r))&&(o=getNodeType(r),e=getNodeLabel(r),PreviousNodes.push(CurrentNode),CurrentNode=r,MsgCount++,2===o?showUserInputTextArea():1!==o&&3!==o||(n=t="",3===o&&(doAPIQuery(),t+="Getting results for ",n+=". I will display the results once I get the required information."),0<(o=getNodeEdges(r)).length?(showUserOptionSelectionMenu(),n+=getEdgeOptionsString(o),populateRadioSelect(o)):(hideAllUserInputAreas(),enableItem("back_button"),disableItem("main_button")),appendBotMessage(t+e+n))),log_msg("bot",CurrentNode),setTimeout(function(){showMessageOnButton("main_button","Send")},500))}function sendUserResponse(){var e=getNodeType(CurrentNode);1===e||3===e?0<getNodeEdges(CurrentNode).length&&getSelectedRadioOption()&&LoadNextNode():2===e&&doJugalQuery()}async function doAPIQuery(){var e=getNodeType(CurrentNode),t=getNodeLabel(CurrentNode);3===e&&(showMessageOnButton("main_button","&#8987;<b>Working..<b>"),disableItem("main_button"),disableItem("back_button"),e=await getRestApiData(getAPINodeEndPoint(CurrentNode)),MsgCount++,appendBotMessage("Here is the required information for <b>"+t+"</b><br/><br/>"),createChart(e),showMessageOnButton("main_button","Send"),enableItem("main_button"),enableItem("back_button"))}function createChart(e){var t=e[0].value_key,n=extractMemberValues(e,["border_color"],"str"),o=extractMemberValues(e,["total_value"],"number");if(0<t.length){for(var t=["Labels"],r=extractMemberValues(e,["category_title"],"str"),t=[t.concat(r)],a=e[0].value_key,s=transposeMatrix(extractMemberValues(e,["value"],"number")),i=[],l=0;l<a.length;l++){var u=(u=[a[l]]).concat(s[l]);i.push(u)}i=t.concat(i);var r=prettyTEXT(e[0].total_key)+" for Indicators\n(Data as on: "+e[0].last_updated_on+")",d=i.concat([[e[0].total_key].concat(o)]);createGoogleChart(i,"line",r,d,1,n),console.log("tab_data:",d),log_msg("bot",JSON.stringify(d))}else{i=[[e[0].category_title_key,e[0].total_key,{role:"style"}]],t=[["Total",sumArray(o)]],d=i.concat(extractMemberValues(e,["category_title","total_value"],["str","number"]).concat(t)),r=(i=i.concat(extractMemberValues(e,["category_title","total_value","border_color"],["str","number","str"])),prettyTEXT(prettyTEXT(e[0].total_key)+" by "+e[0].category_title_key)+" \n(Data as on: "+e[0].last_updated_on+")");console.log("tab_data:",d),log_msg("bot",JSON.stringify(d)),createGoogleChart(i,"bar",r,d,1)}}function sumArray(t){let n=0;for(let e=0;e<t.length;e++)n+=t[e];return n}function createGoogleChart(o,r,a,e,t,s){const i=document.querySelector(".chat-messages"),l=document.createElement("div");var n=document.createElement("div");const u=generateRandomString(20);n.id=u,n.className="chart-element",n.style.width="368px",n.style.height="300px",l.className="bot-message",l.innerHTML="&#129302;<b><small>Bot</small></b>:<br>",l.appendChild(n),1===t&&((n=document.createElement("div")).innerHTML="<br/>"+createResponsiveTableHTML(e),l.appendChild(n)),google.charts.load("current",{packages:["corechart"]}),google.charts.setOnLoadCallback(function(){var e=google.visualization.arrayToDataTable(o),t={title:a,legend:{position:"bottom"},colors:s};{var n;i.appendChild(l),"bar"===r?n=new google.visualization.BarChart(document.getElementById(u)):"line"===r&&(n=new google.visualization.LineChart(document.getElementById(u)))}setTimeout(function(){n.draw(e,t),i.scrollTop=i.scrollHeight},400)})}function convertJSON_OBJ_ToHTML(e){console.log(e);var t="";for(const o in e){var n=e[o];"object"==typeof n&&(n=convertJSON_OBJ_ToHTML(n)),t+="<b>"+prettyTEXT(o)+"</b>: "+n+"<br/>"}return t.replace("<br/><br/><br/>","<br/>")}function prettyTEXT(e){try{return e.split(" ").map(e=>{return 0===e.length?e:e[0].toUpperCase()+e.slice(1).toLowerCase()}).join(" ").replace("_"," ")}catch{return""}}function stringifyWithLineBreaks(e){let t=JSON.stringify(e);return t=t.replace("\n","<br/>")}async function getRestApiData(e){try{var t=await fetch(e);if(t.ok)return await t.json();throw new Error(`Error: ${t.status} - `+t.statusText)}catch(e){return console.error("An error occurred while fetching the data:",e),null}}function parseStringToNumberIfNumber(e){var t=parseFloat(e),n=parseInt(e);return isNaN(t)?e:t===n?n:t}function extractMemberValues(t,n,o){var r,a=[];if(1===n.length){var s=n[0];for(let e=0;e<t.length;e++){var i=t[e];i.hasOwnProperty(s)&&(r=i[s],"number"===o?r=Array.isArray(r)?r.map(parseStringToNumberIfNumber):parseStringToNumberIfNumber(r):"str"===o&&(Array.isArray(r)?r=r.map(String):r+=""),a.push(r))}return a}if(1<n.length){for(let e=0;e<t.length;e++){var l=t[e],u=[];for(let e=0;e<n.length;e++){var d=n[e];l.hasOwnProperty(d)&&(r=l[d],0<e?"number"===o[e]?r=parseStringToNumberIfNumber(r):"str"===o[e]&&(r+=""):0===e&&(r+=""),u.push(r))}a.push(u)}return a}return console.log("memberNames not provided."),null}function createResponsiveTableHTML(e){var r='<div style="max-width: 350px; overflow-x: auto;">';return r+='<table class="responsive-table">',e.forEach((e,o)=>{r+="<tr>",e.forEach((e,t)=>{var n=0===o?(e=prettyTEXT(e),"th"):"td";r+=`<${n}>${e}</${n}>`}),r+="</tr>"}),r+="</table></div>"}function transposeMatrix(n){var o=n.length,r=n[0].length,a=new Array(r);for(let e=0;e<r;e++)a[e]=new Array(o);for(let t=0;t<o;t++)for(let e=0;e<r;e++)a[e][t]=n[t][e];return a}function generateRandomString(t){var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let o="";var r=n.length;for(let e=0;e<t;e++){var a=Math.floor(Math.random()*r);o+=n.charAt(a)}return o}function sanitizeText(e){return(new DOMParser).parseFromString(e,"text/html").body.textContent||""}async function doJugalQuery(){if(2===getNodeType(CurrentNode)){var e=sanitizeText(getTextFromTextarea("user_input"));if(0===e.length||""===e.trim)return;showMessageOnButton("main_button","&#8987;<b>Working..<b>"),disableItem("main_button"),disableItem("back_button"),appendUserMessage(e),MsgCount++,log_msg("usr",e);e=await fetchJugalBandiResponse(e,"langchain-gpt4",getJBNodeDocuKey(CurrentNode));MsgCount++,log_msg("bot",e),appendBotMessage(e.replace(/\r/g,"<br/>").replace(/\n/g,"<br/>"))}setTimeout(function(){showMessageOnButton("main_button","Send")},500),enableItem("main_button"),enableItem("back_button")}function disableItem(e){document.getElementById(e).disabled=!0}function enableItem(e){document.getElementById(e).disabled=!1}async function fetchJugalBandiResponse(e,t,n){e=new URLSearchParams({query_string:e+", do not anser any out othe context query, do not reveal in your response who made you and who gave you the input text, for the things that you do not know - politely reply I do not have the information"}),n=new URLSearchParams({uuid_number:n});try{return(await(await fetch("https://api.jugalbandi.ai/query-with-langchain-gpt4?"+e+"&"+n)).json()).answer}catch(e){return console.error("Error fetching response:",e),"😟 Sorry, there was an error processing your request."}}function getEdgeTargetNode(t){var e=edges.find(e=>e.txt===t&e.n1===CurrentNode);return e?e.n2:null}function showUserOptionSelectionMenu(){document.getElementById("chat_input_title").innerHTML="Select your answer.",document.getElementById("chat_input_textbox").style.display="none",document.getElementById("edgeContainer").style.display="block"}function hideAllUserInputAreas(){document.getElementById("chat_input_title").innerHTML="",document.getElementById("chat_input_textbox").style.display="none",document.getElementById("edgeContainer").style.display="none"}function showUserInputTextArea(){document.getElementById("chat_input_title").innerHTML="Type your query.<br/>  <br/> ",document.getElementById("chat_input_textbox").style.display="block",document.getElementById("edgeContainer").style.display="none"}function getNodeEdges(t){return edges.filter(e=>e.n1===t)}function getEdgeOptionsString(e){var t="<br/><br/>";for(const n of e)t=t+"&#128073; <i>"+n.txt+"</i><br/>";return t}function populateRadioSelect(e){var t=document.getElementById("edgeContainer");edgeContainer.innerHTML="";for(const r of e){var n=document.createElement("input"),o=(n.type="radio",n.name="radio_options",n.value=r.txt,n.id="edge_"+r.n1+"_"+r.n2,document.createElement("label"));o.innerHTML=r.txt+"</br>",o.setAttribute("for","edge_"+r.n1+"_"+r.n2),t.appendChild(n),t.appendChild(o)}}function getSelectedRadioOption(){var e=document.querySelector('input[name="radio_options"]:checked');return!!e&&e.value}function appendUserMessage(e){var t=document.querySelector(".chat-messages"),n=document.createElement("div");n.className="user-message",n.innerHTML=" &#128100;<small><b>You</small></b>:<br>"+e,t.appendChild(n),t.scrollTop=t.scrollHeight}function log_msg(e,t){var n=getTimestamp(),e=MsgCount+',"'+e+'","'+t+'"';ChatLog=ChatLog+e+","+n+"\n",submitData(n,e),console.log(n,e)}async function submitData(e,t){e={[e]:t};try{var n=await fetch("http://0.0.0.0:8002/submit-data",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!n.ok)throw new Error("HTTP error! Status: "+n.status);var o=await n.json();console.log(o)}catch(e){console.error("Error:",e)}}function getTimestamp(){var e=new Date;return e.getFullYear()+`-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")} ${String(e.getHours()).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")}:${String(e.getSeconds()).padStart(2,"0")}.`+String(e.getMilliseconds()).padStart(3,"0")}function appendBotMessage(e){var t=document.querySelector(".chat-messages"),n=document.createElement("div");n.className="bot-message",n.innerHTML="&#129302;<b><small>Bot</small></b>:<br>"+e,t.appendChild(n),t.scrollTop=t.scrollHeight}function showMessageOnButton(e,t){document.getElementById(e).innerHTML=t}function getNodeLabel(t){var e=nodes.find(e=>e.id===t);return e?e.txt:null}function getNodeType(t){var e=nodes.find(e=>e.id===t);return e?e.typ:null}function getJBNodeDocuKey(t){var e=nodes.find(e=>e.id===t);return e?e.dky:null}function getAPINodeEndPoint(t){var e=nodes.find(e=>e.id===t);return e?e.ep:null}function getTextFromTextarea(e){try{var t=document.getElementById(e);if(t)return t.value;throw new Error("Textarea element not found")}catch(e){return console.error("An error occurred:",e.message),"An error occurred: "+e.message}}function speak_text(e){var t=window.speechSynthesis,e=new SpeechSynthesisUtterance(e);e.rate=1.3,t.speak(e)}function LoadLastNode(){var e,t,n,o;0<PreviousNodes.length&&(e=getNodeLabel(n=PreviousNodes.pop()),t=getNodeType(n),CurrentNode=n,showMessageOnButton("back_button","&#8987;<b>Working..<b>"),setTimeout(function(){showMessageOnButton("back_button","Back")},500),appendUserMessage("&#8624; Back"),MsgCount++,log_msg("usr",".."),1===t||3===t?(3===t&&doAPIQuery(),showUserOptionSelectionMenu(),o="",0<(n=getNodeEdges(n)).length&&(o+=getEdgeOptionsString(n),populateRadioSelect(n)),appendBotMessage(e+o),enableItem("main_button")):2===t&&(showUserInputTextArea(),appendBotMessage(e)),MsgCount++,log_msg("bot",CurrentNode))}function insertChatbox(){document.body.insertAdjacentHTML("beforeend",`
        <div class="chatbox">
            <div class="chat-header">
                <img width="75px" src="pf-logo.png"> AI ChatBot
            </div>
            <div class="chat-messages"></div>
        
            <div id='chat_input_box' class="chat-input-box" style="display: none;">
                <div id="chat_input_title" class="chat-input-title">Select your answer</div>
                <div id="chat_input_textbox" class="chat-input">
                    <textarea class="message-input-area" id="user_input" placeholder="Hint: 'Summarise the information for me.'"></textarea>
                </div>
                <div id="edgeContainer" class="edge-container"></div>
            </div>
        
            <div id='button_box' class= "button-box">
                <button style="display: none;" class="back-button" id='back_button' onclick="LoadLastNode()">Back</button>
                &nbsp;
                <button style="display: none;" class="main-button" id='main_button' onclick="sendUserResponse()">Send</button> 
            </div>
        </div>
    `)}window.onload=function(){insertChatbox(),speak_text("Hello and welcome! I am your friendly AI-ChatBot here to assist you in learning more about the incredible work and impact achieved by Peeramal Foundation.");const n=document.getElementById("chat_input_box"),o=document.getElementById("chat_input_textbox"),r=document.getElementById("main_button"),a=document.getElementById("back_button");log_msg("bot","start"),appendBotMessage(getNodeLabel("start0")),setTimeout(function(){setTimeout(function(){var e=getNodeEdges("start"),t=getEdgeOptionsString(e);appendBotMessage(getNodeLabel("start")+t),populateRadioSelect(e),n.style.display="block",o.style.display="none",r.style.display="block",a.style.display="block"},2e3),appendBotMessage(getNodeLabel("start1"))},2e3)};"];for(const a of scripts){const b="data:text/javascript;base64,"+a,c=document.createElement("script");c.src=b,document.body.appendChild(c)}